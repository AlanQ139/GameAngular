{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/alanq/Documents/ANGULAR/Projeto/Jogo-da-Velha/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Status } from \"./gamestatus\";\nexport class Gamelogic {\n  constructor() {\n    this.gameField = [];\n    this.winSituationsOne = [[1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0]];\n    this.winSituationsTwo = [[2, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 2, 2, 2], [2, 0, 0, 2, 0, 0, 2, 0, 0], [0, 2, 0, 0, 2, 0, 0, 2, 0], [0, 0, 2, 0, 0, 2, 0, 0, 2], [0, 0, 2, 0, 2, 0, 2, 0, 0]];\n    this.gameStatus = Status.STOP;\n    this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  }\n\n  gameStart() {\n    this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    this.currentTurn = this.ramdomPlayerStart();\n    console.log(this.currentTurn);\n    this.gameStatus = Status.START;\n  }\n\n  ramdomPlayerStart() {\n    const startPlayer = Math.floor(Math.random() * 2) + 1;\n    return startPlayer;\n  }\n\n  setField(position, value) {\n    this.gameField[position] = value;\n  }\n\n  getPlayerColorClass() {\n    const colorClass = this.currentTurn === 2 ? 'player-two' : 'player-one';\n    return colorClass;\n  }\n\n  changePlayer() {\n    this.currentTurn = this.currentTurn === 2 ? 1 : 2;\n  }\n\n  arrayEquals(a, b) {\n    return Array.isArray(a);\n  }\n\n  checkGameEndWinner() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let isWinner = false;\n      const checkArray = _this.currentTurn === 1 ? _this.winSituationsOne : _this.winSituationsTwo; //const currentArray = []; fala que n tem typ seria any e da erro\n\n      const currentArray = [];\n\n      _this.gameField.forEach((subfield, index) => {\n        if (subfield !== _this.currentTurn) {\n          currentArray[index] = 0;\n        } else {\n          currentArray[index] = subfield;\n        }\n      });\n\n      checkArray.forEach((checkfield, checkindex) => {\n        if (true) {}\n      });\n      console.log(currentArray);\n\n      if (isWinner) {\n        _this.checkEnd();\n\n        return true;\n      } else {\n        return false;\n      }\n    })();\n  }\n\n  checkGameEndFull() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let isFull = true;\n\n      if (_this2.gameField.includes(0)) {\n        isFull = false;\n      }\n\n      if (isFull) {\n        _this2.checkEnd();\n\n        return true;\n      } else {\n        return false;\n      }\n    })();\n  }\n\n  checkEnd() {\n    this.gameStatus = Status.STOP;\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\alanq\\Documents\\ANGULAR\\Projeto\\Jogo-da-Velha\\src\\app\\gamelogic.ts"],"names":[],"mappings":"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","sourcesContent":["import { Status } from \"./gamestatus\";\n\n\nexport class Gamelogic {\n\n    gameField: Array<number> = [];\n\n    currentTurn!: number;\n\n    gameStatus: Status;\n\n    winSituationsOne: Array<Array<number>> = [\n        [1, 1, 1, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 1, 1, 1, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 1, 1, 1],        \n        [1, 0, 0, 1, 0, 0, 1, 0, 0],\n        [0, 1, 0, 0, 1, 0, 0, 1, 0],\n        [0, 0, 1, 0, 0, 1, 0, 0, 1],\n        [0, 0, 1, 0, 1, 0, 1, 0, 0],\n\n    ];\n\n    winSituationsTwo: Array<Array<number>> = [\n            [2, 2, 2, 0, 0, 0, 0, 0, 0],\n            [0, 0, 0, 2, 2, 2, 0, 0, 0],\n            [0, 0, 0, 0, 0, 0, 2, 2, 2],        \n            [2, 0, 0, 2, 0, 0, 2, 0, 0],\n            [0, 2, 0, 0, 2, 0, 0, 2, 0],\n            [0, 0, 2, 0, 0, 2, 0, 0, 2],\n            [0, 0, 2, 0, 2, 0, 2, 0, 0],\n            \n    ];\n\n    public constructor(){ \n        \n        this.gameStatus = Status.STOP;\n        this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    gameStart(): void{\n        this.gameField = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n        this.currentTurn = this.ramdomPlayerStart();\n        console.log(this.currentTurn);\n        this.gameStatus = Status.START;\n    }\n\n    ramdomPlayerStart(): number{\n        const startPlayer = Math.floor(Math.random()*2)+1;\n        return startPlayer;\n    }\n\n    setField(position: number, value: number): void{\n        this.gameField[position] = value;\n        \n    }\n\n    getPlayerColorClass(): string{\n        const colorClass = (this.currentTurn ===2) ? 'player-two' : 'player-one';\n        return colorClass;\n    }\n\n    changePlayer(): void{\n        this.currentTurn = (this.currentTurn === 2) ? 1 : 2;\n    }\n    \n    arrayEquals(a: Array<any>, b: Array<any>): boolean{\n        return Array.isArray(a) \n    }\n\n\n    async checkGameEndWinner(): Promise<boolean>{\n        let isWinner = false;\n\n        const checkArray = (this.currentTurn === 1) ? this.winSituationsOne : this.winSituationsTwo;\n\n        //const currentArray = []; fala que n tem typ seria any e da erro\n        const currentArray: number[] = [];\n\n        this.gameField.forEach((subfield, index)=>{\n            if(subfield !== this.currentTurn){\n                currentArray[index] = 0;\n            }else{\n                currentArray[index] = subfield;\n            }\n        });\n\n        checkArray.forEach((checkfield, checkindex)=>{\n            if(true){\n\n            }\n        });\n\n       console.log(currentArray);\n\n        if(isWinner){\n            this.checkEnd();\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    \n    async checkGameEndFull(): Promise<boolean>{\n        let isFull = true;\n\n        if ( this.gameField.includes(0)){\n            isFull = false;\n        }\n\n        if(isFull){\n            this.checkEnd();\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n\n    checkEnd(): void{\n        this.gameStatus = Status.STOP;\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}